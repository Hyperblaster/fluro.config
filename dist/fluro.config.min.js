angular.module("fluro.config",["ngStorage"]).provider("Fluro",function(){var config={apiURL:"https://apiv2.fluro.io",token:null};return{set:function(settings){config=settings},$get:function(){return config}}}).service("FluroTokenService",function($rootScope,$injector,$localStorage,Fluro){var controller={};return controller.recall=function(){$localStorage.session?($rootScope.user=$localStorage.session,Fluro.token=$localStorage.session.token,Fluro.tokenExpires=$localStorage.session.expires,Fluro.refreshToken=$localStorage.session.refreshToken,console.log("Recall",$localStorage.session)):(console.log("Nothin!"),controller.deleteSession())},controller.login=function(details,successCallback,errorCallback){var $http=$injector.get("$http"),request=$http.post(Fluro.apiURL+"/token/login",details);request.success(function(res){console.log("Token Success",res),$localStorage.session=res,controller.recall(),successCallback&&successCallback(res)}),request.error(function(res){console.log("Token Error",res),errorCallback&&errorCallback(res)})},controller.hasExpired=function(){if($localStorage.session){var expiry=new Date($localStorage.session.expires),now=new Date;return expiry.getTime()<=now.getTime()}},controller.refresh=function(successCallback,errorCallback){var $http=$injector.get("$http"),session=$localStorage.session;if(session&&session.refreshToken){var request=$http.post(Fluro.apiURL+"/token/refresh",{refreshToken:session.refreshToken});request.success(function(res){console.log("Refresh Token Success",res),$localStorage.session.refreshToken=res.refreshToken,$localStorage.session.token=res.token,$localStorage.session.expires=(new Date).getTime()+6e3,controller.recall(),successCallback&&successCallback(res)}),request.error(function(res){console.log("Error refreshing token",res),controller.deleteSession(),errorCallback&&errorCallback(res)})}},controller.deleteSession=function(){delete $localStorage.session,delete $rootScope.user,delete Fluro.token,delete Fluro.tokenExpires,delete Fluro.refreshToken},controller.logout=function(){controller.deleteSession()},controller.recall(),controller}).service("FluroAuthentication",function($q,Fluro,FluroTokenService){return{request:function(config){function refreshSuccess(res){console.log("Refreshed successfully",res),config.headers.Authorization="Bearer "+res.token,deferred.resolve(config)}function refreshFailed(res){console.log("Refresh failed",res),deferred.reject(config)}if(-1!=config.url.indexOf("/token"))return console.log(config.url,"by pass token append"),config;var deferred=$q.defer();Fluro.token&&(config.headers.Authorization="Bearer "+Fluro.token);var date=new Date;if(Fluro.timezoneOffset&&String(Fluro.timezoneOffset).length){var websiteOffset=Fluro.timezoneOffset,viewerOffset=-1*date.getTimezoneOffset(),hoursDifference=websiteOffset-viewerOffset,offsetDifference=60*hoursDifference*1e3;date.setTime(date.getTime()+offsetDifference)}if(config.headers["fluro-request-date"]=date.toUTCString(),Fluro.tokenExpires){var expired=FluroTokenService.hasExpired();console.log("Has expired",expired),expired?(console.log("token expired and requires refresh"),FluroTokenService.refresh(refreshSuccess,refreshFailed)):deferred.resolve(config)}else deferred.resolve(config);return deferred.promise}}});
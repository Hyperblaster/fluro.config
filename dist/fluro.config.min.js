angular.module("fluro.config",["ngStorage"]).provider("Fluro",function(){var config={apiURL:"https://api.fluro.io",token:null,sessionStorage:!1};return{set:function(settings){config=settings},$get:function(){return config}}}).service("FluroTokenService",["$rootScope","$injector","$sessionStorage","$localStorage","Fluro",function($rootScope,$injector,$sessionStorage,$localStorage,Fluro){var controller={};controller.storageLocation=function(){return Fluro.sessionStorage?$sessionStorage:$localStorage},controller.set=function(session){var storage=controller.storageLocation();storage.session=session,controller.recall()},controller.recall=function(){var storage=controller.storageLocation();storage.session&&($rootScope.user=storage.session,Fluro.token=storage.session.token,Fluro.tokenExpires=storage.session.expires,Fluro.refreshToken=storage.session.refreshToken)},controller.signup=function(details,options){options||(options={});var autoAuthenticate=!0;options.disableAutoAuthenticate&&(autoAuthenticate=!1);var url=Fluro.apiURL+"/token/signup";options.application&&(url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application/signup":"/fluro/application/signup"),options.url&&(url=options.url);var $http=$injector.get("$http"),storage=controller.storageLocation(),request=$http.post(url,details);return request.then(function(res){autoAuthenticate&&(storage.session=res.data,controller.recall()),options.success&&options.success(res.data)},function(err){options.error&&options.error(err.data)}),request},controller.sendResetPasswordRequest=function(details,options){options||(options={});var url=Fluro.apiURL+"/resend";url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application/forgot":"/fluro/application/forgot";var $http=$injector.get("$http"),request=$http.post(url,details);return request},controller.applicationRequest=function(details,path,options){options||(options={});var url;if(url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application"+path:"/fluro/application"+path,!url||!url.length)return console.log("Cant send an invite request without an application url");var config,$http=$injector.get("$http");Fluro.token&&(config={bypassInterceptor:!0,headers:{Authorization:"Bearer "+Fluro.token}});var request=$http.post(url,details,config);return request},controller.retrieveUserFromResetToken=function(token,options){options||(options={});var url=Fluro.apiURL+"/auth/token/"+token;options.application&&(url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application/reset/"+token:"/fluro/application/reset/"+token);var $http=$injector.get("$http"),request=$http.get(url);return request},controller.updateUserWithToken=function(token,details,options){options||(options={});var url=Fluro.apiURL+"/auth/token/"+token;options.application&&(url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application/reset/"+token:"/fluro/application/reset/"+token);var $http=$injector.get("$http"),request=$http.post(url,details);return request.then(function(res){controller.set(res.data)}),request},controller.login=function(details,options){options||(options={});var autoAuthenticate=!0;options.disableAutoAuthenticate&&(autoAuthenticate=!1);var url=Fluro.apiURL+"/token/login";options.application&&(url=Fluro.appDevelopmentURL&&Fluro.appDevelopmentURL.length?Fluro.appDevelopmentURL+"/fluro/application/login":"/fluro/application/login"),options.managedAccount&&(url=Fluro.apiURL+"/managed/"+options.managedAccount+"/login"),options.url&&(url=options.url);var $http=$injector.get("$http"),storage=controller.storageLocation(),request=$http.post(url,details);return request.then(function(res){autoAuthenticate&&(storage.session=res.data,controller.recall()),options.success&&options.success(res.data)},function(res){options.error&&options.error(res.data)}),request},controller.signInAsPersona=function(personaID,options){options||(options={});var autoAuthenticate=!0;options.disableAutoAuthenticate&&(autoAuthenticate=!1);var $http=$injector.get("$http"),storage=controller.storageLocation(),request=$http.post(Fluro.apiURL+"/token/persona/"+personaID);return request.then(function(res){autoAuthenticate&&(storage.session=res.data,controller.recall()),options.success&&options.success(res.data)},function(res){options.error&&options.error(res.data)}),request},controller.getTokenForAccount=function(accountId,options){options||(options={});var autoAuthenticate=!0;options.disableAutoAuthenticate&&(autoAuthenticate=!1);var $http=$injector.get("$http"),storage=controller.storageLocation(),request=$http.post(Fluro.apiURL+"/token/account/"+accountId);return request.then(function(res){autoAuthenticate&&(storage.session=res.data,controller.recall()),options.success&&options.success(res.data)},function(res){options.error&&options.error(res.data)}),request},controller.hasExpired=function(){var storage=controller.storageLocation();if(storage.session){var expiry=new Date(storage.session.expires),now=new Date;expiry.getTime()<=now.getTime();return expiry.getTime()<=now.getTime()}};var inflightRequest;return controller.refresh=function(successCallback,errorCallback){if(inflightRequest)return inflightRequest;var storage=controller.storageLocation(),$http=$injector.get("$http"),session=storage.session;return session&&session.refreshToken?(inflightRequest=$http.post(Fluro.apiURL+"/token/refresh",{refreshToken:session.refreshToken,managed:"managed"==session.accountType}),inflightRequest.then(function(res){if(inflightRequest=null,storage.session.refreshToken=res.data.refreshToken,storage.session.token=res.data.token,storage.session.expires=res.data.expires,controller.recall(),successCallback)return successCallback(res.data)},function(err){if(inflightRequest=null,"invalid_refresh_token"==err.data&&controller.deleteSession(),errorCallback)return errorCallback(err)}),inflightRequest):void 0},controller.deleteSession=function(){var storage=controller.storageLocation();storage.session=null,delete $rootScope.user,delete Fluro.token,delete Fluro.tokenExpires,delete Fluro.refreshToken,Fluro.backupToken&&(console.log("Set backup token"),Fluro.token=Fluro.backupToken)},controller.logout=function(){controller.deleteSession()},controller.recall(),controller}]).service("FluroAuthentication",["$q","Fluro","$injector","FluroTokenService",function($q,Fluro,$injector,FluroTokenService){function retryRequest(httpConfig){console.log("Retrying request");var thisTimeout=incrementalTimeout;incrementalTimeout+=1e3;var $http=$injector.get("$http"),$timeout=$injector.get("$timeout");return $timeout(function(){return $http(httpConfig)},thisTimeout)}var incrementalTimeout=300;return{responseError:function(response){switch(console.log("Response Error",response),response.status){case 502:case 504:return console.log("Retrying request"),retryRequest(response.config)}return $q.reject(response)},request:function(config){function startsWith(string){return config.url.slice(0,string.length)===string}function refreshSuccess(res){var newToken=res.data;config.headers.Authorization="Bearer "+newToken.token,deferred.resolve(config)}function refreshFailed(res){FluroTokenService.backup?(FluroTokenService.backup.token&&(Fluro.token=FluroTokenService.backup.token,config.headers.Authorization="Bearer "+Fluro.token),FluroTokenService.backup.user&&($rootScope.user=FluroTokenService.backup.user),deferred.resolve(config)):deferred.reject(config)}if(!startsWith(Fluro.apiURL))return config;var date=new Date;if(Fluro.timezoneOffset&&String(Fluro.timezoneOffset).length){var websiteOffset=Fluro.timezoneOffset,viewerOffset=date.getTimezoneOffset()*-1,hoursDifference=websiteOffset-viewerOffset,offsetDifference=60*hoursDifference*1e3;date.setTime(date.getTime()+offsetDifference)}if(config.headers["fluro-request-date"]=date.toUTCString(),config.bypassInterceptor)return config;if(config.url.indexOf("/token/refresh")!=-1)return config;if(!Fluro.token)return config;var deferred=$q.defer();if(Fluro.tokenExpires){var expired=FluroTokenService.hasExpired();if(expired){var refreshRequest=FluroTokenService.refresh();refreshRequest.then(refreshSuccess,refreshFailed)}else config.headers.Authorization="Bearer "+Fluro.token,deferred.resolve(config)}else config.headers.Authorization="Bearer "+Fluro.token,deferred.resolve(config);return deferred.promise}}}]).service("FluroTokenStore",["$sessionStorage","$localStorage","$q","$injector","Fluro","FluroTokenService",function($sessionStorage,$localStorage,$q,$injector,Fluro,FluroTokenService){var storeInstance=function(key){var controller={};controller.defaultStorage="local",controller.get=function(){var storage=controller.storageLocation();return storage[key]},controller.set=function(session){controller.storageLocation();storagestorage[key]=session},controller.storageLocation=function(){if(controller.storage)return controller.storage;switch(controller.defaultStorage){case"session":return $sessionStorage;default:return $localStorage}},controller.login=function(credentials,options){function loginComplete(res){storage[key]=res.data}function loginFailed(res){}options||(options={});var storage=controller.storageLocation();options.disableAutoAuthenticate=!0;var request=FluroTokenService.login(credentials,options);return request.then(loginComplete,loginFailed),request},controller.signup=function(credentials,options){function signupComplete(res){storage[key]=res.data}function signupFailed(res){}options||(options={});var storage=controller.storageLocation();options.disableAutoAuthenticate=!0;var request=FluroTokenService.signup(credentials,options);return request.then(signupComplete,signupFailed),request},controller.hasExpired=function(){var storage=controller.storageLocation();if(storage[key]){var expiry=new Date(storage[key].expires),now=new Date,hasExpired=expiry.getTime()<=now.getTime();return hasExpired}},controller.config=function(){function refreshSuccess(res){res.data;config.headers.Authorization="Bearer "+storage[key].token,deferred.resolve(config)}function refreshFailed(res){deferred.reject(config)}var deferred=$q.defer(),storage=controller.storageLocation();if(!storage[key]||!storage[key].token)return deferred.reject(),deferred.promise;var config={};if(config.bypassInterceptor=!0,config.headers={Authorization:"Bearer "+storage[key].token},storage[key].expires){var expired=controller.hasExpired();if(expired){var refreshRequest=controller.refresh();refreshRequest.then(refreshSuccess,refreshFailed)}else config.headers.Authorization="Bearer "+storage[key].token,deferred.resolve(config)}else config.headers.Authorization="Bearer "+storage[key].token,deferred.resolve(config);return deferred.promise},controller.deleteSession=function(){var storage=controller.storageLocation();delete storage[key]};var inflightRequest;return controller.refresh=function(){if(inflightRequest)return inflightRequest;var storage=controller.storageLocation(),$http=$injector.get("$http"),storedUser=storage[key];return storedUser&&storedUser.refreshToken?(inflightRequest=$http.post(Fluro.apiURL+"/token/refresh",{refreshToken:storedUser.refreshToken,managed:"managed"==storedUser.accountType}),inflightRequest.then(function(res){inflightRequest=null,storage[key].refreshToken=res.data.refreshToken,storage[key].token=res.data.token,storage[key].expires=res.data.expires},function(err){inflightRequest=null,"invalid_refresh_token"==err.data&&controller.deleteSession()}),inflightRequest):void 0},controller};return storeInstance}]).service("DateTools",["Fluro",function(Fluro){var controller={};return controller.calculateAge=function(d){var today,birthDate;Fluro.timezoneOffset?(today=controller.localDate(),birthDate=controller.localDate(d)):(today=new Date,birthDate=new Date(d));var age=today.getFullYear()-birthDate.getFullYear(),m=today.getMonth()-birthDate.getMonth();return(m<0||0===m&&today.getDate()<birthDate.getDate())&&age--,console.log("DateTools.calculateAge",d,age),age},controller.localDate=function(d){var date;date=d?new Date(d):new Date;var timezoneOffset,browserOffset=date.getTimezoneOffset();if(Fluro.timezone){if(!window.moment)return console.log("Moment is not defined"),date;timezoneOffset=window.moment.tz(date,Fluro.timezone).utcOffset(),browserOffset=window.moment(date).utcOffset();var difference=timezoneOffset-browserOffset,offsetDifference=60*difference*1e3;new Date(date);date.setTime(date.getTime()+offsetDifference)}return date},controller.expired=function(d){var today,checkDate;return Fluro.timezoneOffset?(today=controller.localDate(),checkDate=controller.localDate(d)):(today=new Date,checkDate=new Date(d)),today>checkDate},controller.isValidDate=function(d){return"[object Date]"===Object.prototype.toString.call(d)&&!isNaN(d.getTime())},controller.readableDateRange=function(startDate,endDate,options){options||(options={}),_.isDate(startDate)||(startDate=Fluro.timezoneOffset?controller.localDate(startDate):new Date(startDate)),_.isDate(endDate)||(endDate=Fluro.timezoneOffset?controller.localDate(endDate):new Date(endDate));var today;today=Fluro.timezoneOffset?controller.localDate():new Date;var string="";return startDate.format("d/m/y")!=endDate.format("d/m/y")?(string=startDate.format("M Y")==endDate.format("M Y")?startDate.format("l j")+" - "+endDate.format("l j F"):startDate.format("l j F")+" until "+endDate.format("l j F"),today.format("Y")!=endDate.format("Y")&&(string=string+" "+endDate.format("Y"))):startDate&&(string=startDate.format("l j F"),today.format("Y")!=startDate.format("Y")&&(string=string+" "+startDate.format("Y"))),string},controller}]);